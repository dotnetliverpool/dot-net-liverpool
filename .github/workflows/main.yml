# This is a basic workflow to help you get started with Actions

name: validate-code

on: [push]

jobs:
  validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.0
        
    - name: terraform-fmt
      run: terraform fmt
      working-directory: ./3-github-actions
      continue-on-error: true

    # Runs a single command using the runners shell
    - name: terraform-init
      run: terraform init
      working-directory: ./3-github-actions
    
    - name: terraform-validate
      run: terraform validate -no-color
      working-directory: ./3-github-actions
  
    - uses: actions/github-script@0.9.0
      if: github.event_name == 'push'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}

      
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
